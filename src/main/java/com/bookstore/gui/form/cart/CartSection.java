/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.bookstore.gui.form.cart;

import java.awt.Component;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import java.util.Optional;


import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import javax.swing.JTable;

import com.bookstore.bus.CartItemsBUS;
import com.bookstore.gui.model.CounterModel;
import com.bookstore.model.CartItemsModel;

/**
 *
 * @author Danh
 */
public class CartSection extends javax.swing.JPanel {

  /**
   * Creates new form CartSection
   * @throws SQLException
   * @throws ClassNotFoundException
   */
  public CartSection(String Title, String Price, int Quantity,String book,int cartId) throws ClassNotFoundException, SQLException{
    initComponents(Title, Price,Quantity,book,cartId);
    setName(Title);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */

  // Code">//GEN-BEGIN:initComponents
  private void initComponents(String Title, String Price, int Quantity,String bookIsbn,int cartId) throws ClassNotFoundException, SQLException  {

    lblBookName = new javax.swing.JLabel();
    lbPrice = new javax.swing.JLabel();
    txtQuantity = new javax.swing.JTextField();
    minusBtn = new javax.swing.JButton();
    plusBtn = new javax.swing.JButton();
    deleteProductBtn = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    DescriptionTextArea = new javax.swing.JTextArea();
    checkBoxChooseBookButton = new javax.swing.JCheckBox();
    checkBoxChooseBookButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        try {
          checkTickBtnActionPerformed(evt);
        } catch (ClassNotFoundException | SQLException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });
    lblBookName.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
    lblBookName.setForeground(new java.awt.Color(76, 76, 76));
    lblBookName.setText(Title);

    lbPrice.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
    lbPrice.setForeground(new java.awt.Color(76, 76, 76));
    lbPrice.setText(""+Integer.valueOf(Price)*Quantity);

    txtQuantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    txtQuantity.setText(""+Quantity);

    minusBtn.setText("-");
    minusBtn.addActionListener(new java.awt.event.ActionListener()   {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        try {
          minusBtnActionPerformed(evt,Price,Quantity,bookIsbn,cartId);
        } catch (ClassNotFoundException e) {
          e.printStackTrace();
        } catch (SQLException e) {
          e.printStackTrace();
        }
      }
    });
    plusBtn.setText("+");
    plusBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        try {
          plusBtnActionPerformed(evt,Price,Quantity,bookIsbn,cartId);
        } catch (ClassNotFoundException | SQLException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });

    deleteProductBtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        try {
          deleteProductBtnActionPerformed(evt);
        } catch (ClassNotFoundException | SQLException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });

    DescriptionTextArea.setColumns(20);
    DescriptionTextArea.setRows(5);
    jScrollPane1.setViewportView(DescriptionTextArea);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE));
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkBoxChooseBookButton)
                .addGap(167, 167, 167)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblBookName, javax.swing.GroupLayout.Alignment.TRAILING,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 60,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(minusBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plusBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap()));
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkBoxChooseBookButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBookName)
                        .addGap(19, 19, 19)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbPrice)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(minusBtn)
                                    .addComponent(plusBtn))
                                .addComponent(deleteProductBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 23,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)))));
  }// </editor-fold>//GEN-END:initComponents

  private void plusBtnActionPerformed(java.awt.event.ActionEvent evt, String Price, int Quantity, String bookIsbn,int cartId) throws ClassNotFoundException, SQLException {
    CartItemsBUS cartItemsBUS = CartItemsBUS.getInstance();
    String[] coLunms = {"quantity"};
    String value = String.valueOf(Quantity);
    List<CartItemsModel> cartItems = cartItemsBUS.searchModel(value, coLunms);
    for(CartItemsModel item: cartItems){
      if(item.getBookIsbn().equals(bookIsbn) && item.getCartId()==cartId){
        CounterModel counter = new CounterModel();
        counter.setValue(Quantity);
        counter.DecreaseValue();
        Quantity = counter.getValue();
        item.setQuantity(Quantity);
        CartItemsBUS.getInstance().updateModel(item);
      }
    }

  }

  private void minusBtnActionPerformed(java.awt.event.ActionEvent evt, String Price, int Quantity, String bookIsbn,int cartId) throws ClassNotFoundException, SQLException {
    CartItemsBUS cartItemsBUS = CartItemsBUS.getInstance();
    String[] coLunms = {"quantity"};
    String value = String.valueOf(Quantity);
    List<CartItemsModel> cartItems = cartItemsBUS.searchModel(value, coLunms); //này là tìm các cart item có số lượng là 2, có thể trùng
    // for(CartItemsModel item: cartItems){           //dùng for 
    //   if(item.getBookIsbn().equals(bookIsbn) && item.getCartId()==cartId){
    //     CounterModel counter = new CounterModel();
    //     counter.setValue(Quantity);
    //     counter.DecreaseValue();
    //     Quantity = counter.getValue();
    //     item.setQuantity(Quantity);
    //     // CartItemsBUS.getInstance().updateModel(item);
    //     System.out.println(item);
    //   }
    // }
    Optional<CartItemsModel> optionalUser = cartItems.stream()
        .filter(item -> item.getBookIsbn().equals(bookIsbn) && item.getCartId()==cartId)  // vì trùng nên dùng này để lọc lại, và nó sẽ trả đúng lại cái item đang thao tác, chỉ 1
        .findFirst();
    if (optionalUser.isPresent()) {
        CounterModel counter = new CounterModel();
              counter.setValue(Quantity); // Quantity là biến truyền vào, nó mang giá trị là số lượng của cuốn sách đó trong db
              counter.DecreaseValue();
              Quantity = counter.getValue();
        optionalUser.get().setQuantity(Quantity); //set Quantity mới
        CartItemsBUS.getInstance().updateModel(optionalUser.get());  // update failed
    }
    CartItemsBUS.getInstance().updateModel(new CartItemsModel(1,"4000287668675",54685,2,43));// thử update nhưng k thành
  }

  private void deleteProductBtnActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException {
    CartUI cartUI = new CartUI();
    JButton button = (JButton) evt.getSource();
    CartSection cartSection = (CartSection) button.getParent();
    JPanel table = cartUI.getTable();
    if (table != null) {
      table.remove(cartSection);
      table.revalidate();
      table.repaint();
    }
  }

// Import statement for JPanel
private void checkTickBtnActionPerformed(java.awt.event.ActionEvent evt) throws ClassNotFoundException, SQLException {
    CartUI cartUI = new CartUI();
    JButton button = (JButton) evt.getSource();
    JPanel cartPanel = (JPanel) button.getParent(); // Assumes the cart table is contained in the parent of the button clicked
    boolean isTicked = checkBoxChooseBookButton.isSelected();

    // Get only the items that are ticked
    List<Object> tickedItems = getTickedItems(cartPanel, isTicked);
}

// Method to get the ticked items from the panel
private List<Object> getTickedItems(JPanel panel, boolean isTicked) {
    List<Object> tableList = new ArrayList<>();

    return tableList;
}



  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea DescriptionTextArea;
  private javax.swing.JCheckBox checkBoxChooseBookButton;
  private javax.swing.JButton deleteProductBtn;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lbPrice;
  private javax.swing.JLabel lblBookName;
  private javax.swing.JButton minusBtn;
  private javax.swing.JButton plusBtn;
  private javax.swing.JTextField txtQuantity;
  // End of variables declaration//GEN-END:variables
}

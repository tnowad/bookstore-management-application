/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.bookstore.gui.component.book;

/**
 *
 * @author yanti
 */
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.List;

import javax.swing.*;

import com.bookstore.bus.BookBUS;
import com.bookstore.gui.form.admin.component.book.AddProductFrame;
import com.bookstore.gui.form.admin.component.book.BookProductPanel;
import com.bookstore.models.BookModel;
import com.bookstore.util.Excel.BookExcelUtil;

public class BrowseProductPanel extends JPanel {
    private static BrowseProductPanel instance;
    private BookBUS bookBUS;
    private List<BookModel> listBook;

    /**
     * Creates new form BrowseProductPanel
     */
    public BrowseProductPanel() {
        bookBUS = BookBUS.getInstance();
        listBook = bookBUS.getAllModels();

        initComponents();
        addTable();
    }

    public static BrowseProductPanel getInstance() {
        if (instance == null) {
            instance = new BrowseProductPanel();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        ButtonExport = new javax.swing.JButton();
        ButtonImport = new javax.swing.JButton();
        ButtonCreate = new javax.swing.JButton();
        ButtonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(702, 444));
        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("List Book");
        add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout(5, 5));

        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 10, 10));

        ButtonExport.setText("Export to Excel");
        ButtonExport.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                actionExport();
            }

        });
        ButtonExport.setToolTipText("");
        jPanel3.add(ButtonExport);

        ButtonImport.setText("Import to Excel");
        ButtonImport.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                actionImport();
            }

        });
        jPanel3.add(ButtonImport);

        ButtonCreate.setText("Add");
        ButtonCreate.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                actionAdd();
            }

        });
        jPanel3.add(ButtonCreate);

        ButtonDelete.setText("Delete");
        ButtonDelete.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                actionDelete();
            }

        });
        jPanel3.add(ButtonDelete);

        jPanel2.add(jPanel3, java.awt.BorderLayout.LINE_END);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void addTable() {
        table = new JPanel(new GridLayout(0, 3, 10, 10)); // Use GridLayout with 3 columns and variable number of
        // rows
        int bookCount = 0;
        for (BookModel book : listBook) {
            if (!book.getStatus().toString().equals("DELETED")) {
                BookProductPanel bookProductPanel = new BookProductPanel(book.getIsbn(), book.getTitle(),
                        book.getDescription(), book.getImage(), book.getPrice(), book.getQuantity(), book.getStatus(),
                        book.getPublisherId(), book.getAuthorId());
                table.add(bookProductPanel);
                bookCount++;
            }
        }
        int columnCount = Math.max((int) Math.ceil(Math.sqrt(bookCount)), 3); // Calculate number of columns based on
                                                                              // square root of book count or minimum of
                                                                              // 3 columns
        int rowCount = (int) Math.ceil((double) bookCount / columnCount); // Calculate number of rows based on number of
                                                                          // books and number of columns
        table.setLayout(new GridLayout(rowCount, columnCount, 10, 10)); // Set the layout with the calculated number of
        
    }

    public void actionDelete() {
        int choice = JOptionPane.showConfirmDialog(null, "Do you want to banned products?", "Confirmation",
                JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            for (Component component : table.getComponents()) {
                JPanel subPanel = (JPanel) component;
                for (Component subComponent : subPanel.getComponents()) {
                    if (subComponent instanceof JCheckBox && ((JCheckBox) subComponent).isSelected()) {
                        Component[] components = subPanel.getComponents();
                        for (Component c : components) {
                            if (c instanceof JTextField) {
                                String id = ((JTextField) c).getText();
                                System.out.println(id);
                                String status = "DELETED";
                                int updateStatusRows = BookBUS.getInstance().updateStatus(id, status);
                                if (updateStatusRows == 1) {
                                    JOptionPane.showMessageDialog(null, "You've successfully locked an products!");
                                    table.revalidate();
                                    table.repaint();
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void actionAdd() {
        AddProductFrame addProductFrame = new AddProductFrame();
        addProductFrame.setVisible(true);
    }

    public void actionExport() {
        List<BookModel> listBooks = BookBUS.getInstance().getAllModels();
        try {
            BookExcelUtil.writeBooksToExcel(listBooks);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void actionImport() {
        try {
            List<BookModel> listBooks = BookExcelUtil.readBooksFromExcel();
            for (BookModel book : listBooks) {
                if (book.getStatus().toString().equals("deleted")) {
                    listBooks.remove(book);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void receiveValue(String value) {

        String[] columns = new String[] { "title" };
        List<BookModel> list = BookBUS.getInstance().searchModel(value, columns);
        table.removeAll();
        table.setLayout(new GridLayout(0, 3, 10, 10));
        for (BookModel book : list) {
            if (!book.getStatus().toString().equals("DELETED")) {
                BookProductPanel bookProductPanel = new BookProductPanel(book.getIsbn(), book.getTitle(),
                        book.getDescription(),
                        book.getImage(), book.getPrice(), book.getQuantity(), book.getStatus(),
                        book.getPublisherId(), book.getAuthorId());
                table.add(bookProductPanel);
            }
        }
        table.revalidate();
        table.repaint();
    }

    public void actionResize() {
        double width = jPanel1.getPreferredSize().getWidth();
        System.out.println(width);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCreate;
    private javax.swing.JButton ButtonDelete;
    private javax.swing.JButton ButtonExport;
    private javax.swing.JButton ButtonImport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel table;
    // End of variables declaration//GEN-END:variables
}
